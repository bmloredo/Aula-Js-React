{"version":3,"file":"static/webpack/static\\development\\pages\\remocao.js.ef4c57cd16d0e50e2322.hot-update.js","sources":["webpack:///./src/components/List.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nexport default function Form({\r\n  titulo,\r\n  culto,\r\n  orderListagem,\r\n  remocao,\r\n  chegada,\r\n  setControle,\r\n  controle,\r\n}) {\r\n  const [soma, setSoma] = useState();\r\n  const doRemove = (id, data) => {\r\n    remove(`https://aguaviva-rp.firebaseio.com/teste/${id}.json`, data);\r\n  };\r\n  const remove = (url, data) => {\r\n    Axios.delete(url).then(() => {\r\n      alert(`você removeu ${data.nome} da listagem`);\r\n      window.location = \"/remocao.html\";\r\n    });\r\n  };\r\n  const doEdit = (id, data) => {\r\n    setControle(!controle);\r\n    if (data.chegada) {\r\n      edit(`https://aguaviva-rp.firebaseio.com/teste/${id}.json`, {\r\n        ...data,\r\n        chegada: false,\r\n      });\r\n    } else {\r\n      edit(`https://aguaviva-rp.firebaseio.com/teste/${id}.json`, {\r\n        ...data,\r\n        chegada: true,\r\n      });\r\n    }\r\n  };\r\n  const edit = (url, data) => {\r\n    Axios.put(url, data).then(() => {\r\n      // if (data.chegada) {\r\n      //   alert(`${data.nome} confirmou a presença no culto`);\r\n      // } else {\r\n      //   alert(`você tirou a confirmação de ${data.nome} do culto`);\r\n      // }\r\n      // window.location = \"/controle.html\";\r\n    });\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   let fetchListagem;\r\n  //   setTimeout(function () {\r\n  //     const fetch = async () => {\r\n  //       fetchListagem = await fetchTeacherMentory();\r\n  //       setListMentory(fetchListagem);\r\n  //     };\r\n  //     fetch();\r\n  //   }, 1000);\r\n  // }, [mod]);\r\n\r\n  const contadorChegada = orderListagem?.filter((list) => {\r\n    return list[1].chegada === true && list[1].culto == culto;\r\n  });\r\n\r\n  const contadorCriancas = orderListagem?.filter((list) => {\r\n    return list[1].culto == culto;\r\n  });\r\n  useEffect(() => {\r\n    if (contadorCriancas) {\r\n      const soma1 = [...contadorCriancas];\r\n      const soma2 = soma1.map((som) => {\r\n        return parseInt(som[1].criancas);\r\n      });\r\n      let total;\r\n      if (soma2.length >= 1) {\r\n        total = soma2.reduce((acumulado, x) => {\r\n          // console.log(`${acumulado}+${x} = ${acumulado + x}`);\r\n          return acumulado + x;\r\n        });\r\n      } else {\r\n        total = 0;\r\n      }\r\n\r\n      setSoma(total);\r\n    }\r\n  }, [contadorCriancas]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"list-header\">\r\n        <h1>{titulo}</h1>\r\n        {contadorChegada?.length > 0 && chegada && (\r\n          <span>\r\n            <small className=\"contagem\">{contadorChegada?.length}</small>\r\n            {contadorChegada?.length == 1 && <> pessoa chegou </>}\r\n            {contadorChegada?.length != 1 && <> pessoas chegaram </>}\r\n            no culto\r\n          </span>\r\n        )}\r\n      </div>\r\n      {/* {soma != 0 && !chegada && !remocao && (\r\n        <div className=\"list-criancas\">\r\n          <span>\r\n            <img src=\"images/bebe.svg\" width=\"25\" />\r\n            <small>\r\n              {\" \"}\r\n              <b>{soma}</b>{\" \"}\r\n              {soma == 1\r\n                ? \"criança estará presente\"\r\n                : \"crianças estarão presentes\"}{\" \"}\r\n              para o cultinho\r\n            </small>\r\n          </span>\r\n        </div>\r\n      )} */}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Nome</th>\r\n            <th>Discipulado</th>\r\n            {/* {!chegada && !remocao && <th>Crianças</th>} */}\r\n            {chegada && <th>Controle Servos</th>}\r\n            {remocao && <th>Status</th>}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {orderListagem && (\r\n            <>\r\n              {orderListagem.map((individuo) => {\r\n                return (\r\n                  <>\r\n                    {individuo.map((ind) => {\r\n                      if (ind.culto == culto) {\r\n                        return (\r\n                          <tr key={ind}>\r\n                            <td>\r\n                              {ind.nome} {ind.sobrenome}\r\n                            </td>\r\n                            <td>{ind.rede}</td>\r\n                            {/* {!chegada && !remocao && (\r\n                              <td>{ind.criancas ? ind.criancas : \"0\"}</td>\r\n                            )} */}\r\n                            {chegada && (\r\n                              <td onClick={(e) => doEdit(individuo[0], ind)}>\r\n                                {ind.chegada ? (\r\n                                  <img\r\n                                    src=\"images/carraca.svg\"\r\n                                    className=\"certo\"\r\n                                  />\r\n                                ) : (\r\n                                  <img\r\n                                    src=\"images/carraca.svg\"\r\n                                    className=\"nao_certo\"\r\n                                  />\r\n                                  // <div className=\"nao_chegou\"></div>\r\n                                )}\r\n                              </td>\r\n                            )}\r\n                            {remocao && (\r\n                              <td>\r\n                                <button\r\n                                  className=\"remove\"\r\n                                  onClick={(e) => doRemove(individuo[0], ind)}\r\n                                >\r\n                                  Remover\r\n                                </button>\r\n                              </td>\r\n                            )}\r\n                          </tr>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </>\r\n                );\r\n              })}\r\n            </>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAQA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAGA;AAOA;;;;A","sourceRoot":""}